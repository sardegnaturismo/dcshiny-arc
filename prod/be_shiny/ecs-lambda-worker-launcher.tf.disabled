resource "aws_iam_role" "worker-launcher" {
  name = "${module.env.environment}-${module.env.project}-worker-launcher"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": "lambda.amazonaws.com"
      },
      "Effect": "Allow",
      "Sid": ""
    }
  ]
}
EOF
}

// Inline Policy to use packer on codebuild 
resource "aws_iam_role_policy" "sqs-access" {
  name = "sqs-access"
  role = "${aws_iam_role.worker-launcher.id}"

  policy = <<EOF
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "sqs:SendMessage"
            ],
            "Resource": [
                "arn:aws:sqs:*:*:*"
            ]
        }
    ]
}
EOF
}

resource "aws_iam_role_policy" "CloudwatchLogs" {
  name = "CloudwatchLogs"
  role = "${aws_iam_role.worker-launcher.id}"

  policy = <<EOF
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "logs:CreateLogGroup",
            "Resource": "arn:aws:logs:${module.env.region}:${module.env.account_id}:*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
            ],
            "Resource": [
                "arn:aws:logs:${module.env.region}:${module.env.account_id}:*"
            ]
        }
    ]
}
EOF
}

# resource "aws_lambda_permission" "AllowExecutionFromCloudWatch" {
#   statement_id  = "AllowExecutionFromSNS"
#   action        = "lambda:InvokeFunction"
#   function_name = "${aws_lambda_function.worker.function_name}"
#   principal     = "sns.amazonaws.com"
#   source_arn    = "arn:aws:sns:us-east-1:806199016981:AmazonIpSpaceChanged"
# }


# resource "aws_lambda_function" "worker" {
#   filename         = "worker.zip"
#   function_name    = "worker"
#   role             = "${aws_iam_role.worker.arn}"
#   handler          = "worker.lambda_handler"
#   source_code_hash = "${base64sha256(file("worker.zip"))}"
#   runtime          = "python2.7"
#   memory_size      = 128
#   timeout          = 60


#   environment {
#     variables = {
#       REGION = "${module.env.region}"
#     }
#   }
# }


# resource "aws_sns_topic_subscription" "default" {
#   provider  = "aws.us-east-1"
#   topic_arn = "arn:aws:sns:us-east-1:806199016981:AmazonIpSpaceChanged"
#   protocol  = "lambda"
#   endpoint  = "${aws_lambda_function.worker.arn}"
# }


# resource "aws_cloudwatch_event_rule" "worker" {
#   name        = "worker-Event-Rule"
#   description = "Update autoscaling launch config with latest AMI"


# aws sns subscribe --topic-arn arn:aws:sns:us-east-1:806199016981:AmazonIpSpaceChanged --protocol lambda --notification-endpoint <Lambda ARN>


#   event_pattern = <<PATTERN
# {
#   "detail-type": [
#     "AmiBuilder"
#   ],
#   "source": [
#     "com.ami.builder"
#   ],
#   "detail": {
#     "AmiStatus": [
#       "Created"
#     ]
#   }
# }
# PATTERN
# }


# resource "aws_cloudwatch_event_target" "worker" {
#   rule = "${aws_cloudwatch_event_rule.worker.name}"
#   arn  = "${aws_lambda_function.worker.arn}"
# }

